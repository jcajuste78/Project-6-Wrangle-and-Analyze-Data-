install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
mean(mtcars$mpg)
?mean
?mean
xm <- mean(x)
x
x <- c(0:10, 50)
x
c(xm, mean(x, trim = 0.10))
c(xm, mean(x, trim = 0.10)
install.packages('gridExtra')
library(gridExtra)
## Transforming data
ggplot(aes(x=friend_count),data=pf)
## User ages
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1, fill = '#5760AB') +
scale_x_continuous(breaks = seq(0, 113, 5))
## User ages
ggplot(aes(x = age), data = pf) +
geom_histogram(binwidth = 1, fill = '#5760AB') +
scale_x_continuous(breaks = seq(0, 113, 5))
getwd()
# Load the Data
setwd("C:\\Users\\jcaju\\Google Drive\\Udacity Data Analyst Nanodegree\\Explore Summarize data project -6th")
getwd()
# the parameter "echo" was set to FALSE for this code chunk to
# prevent this code from displaying in the knitted HTML
library(ggplot2)
library(GGally)
library(RColorBrewer)
library(reshape)
library(gridExtra)
library(dplyr)
redwines <- read.csv("wineQualityReds.csv",  row.names = 1, stringsAsFactors = FALSE)
redwines$quality <- factor(wines$quality, ordered = TRUE)
redwines$quality <- factor(redwines$quality, ordered = TRUE)
glimpse(redwines)
summary(redwines$quality)
ggplot(data = redwines, aes(x = quality))+
geom_bar()
# The below functions are used to make univariate plotting faster.
histo_plot <- function(variable, ...){
ggplot(data = redwines, aes_q(as.name(variable)))+
geom_histogram(...)
}
print_summary <- function(variable){
print(summary(redwines[[variable]]))
}
histo_summary <- function(variable, ...){
print_summary(variable)
histo_plot(variable, ...)
}
histo_summary("fixed.acidity", binwidth = 0.2)+
scale_x_continuous(breaks = 4:16)
histo_summary("volatile.acidity", binwidth = 0.02)+
scale_x_continuous(breaks = seq(0, 1.6, 0.1))
histo_summary("citric.acid", binwidth = 0.03)+
scale_x_continuous(breaks = seq(0, 1, 0.125))
histo_summary("residual.sugar", binwidth = 0.2)+
scale_x_continuous(breaks = 0:16)
#limiting range
histo_plot("residual.sugar", binwidth = 0.2)+
scale_x_continuous(breaks = 0:16)+
coord_cartesian(xlim = c(0, 7))
histo_summary("chlorides", binwidth = 0.01)+
scale_x_continuous(breaks = seq(0, 0.6, 0.1))
#limiting range
histo_plot("chlorides", binwidth = 0.01)+
scale_x_continuous(breaks = seq(0, 0.2, 0.05))+
coord_cartesian(xlim = c(0, 0.2))
histo_summary("free.sulfur.dioxide", binwidth = 2)+
scale_x_continuous(breaks = seq(0, 70, 5))
histo_summary("total.sulfur.dioxide", binwidth = 5)+
scale_x_continuous(breaks = seq(0, 300, 25))
histo_summary("density", binwidth = 0.0005)+
scale_x_continuous(breaks = seq(0.990, 1.005, 0.0025))
histo_summary("pH", binwidth = 0.02)+
scale_x_continuous(breaks = seq(0, 4.5, 0.1))
histo_summary("sulphates", binwidth = 0.05)+
scale_x_continuous(breaks = seq(0, 2, 0.25))
histo_summary("alcohol", binwidth = 0.2)+
scale_x_continuous(breaks = seq(8, 15, 1))
# The below functions are used to make bivariate plotting faster.
box_plot <- function(variable){
ggplot(data = redwines, aes_q(x = ~quality, y = as.name(variable)))+
geom_boxplot()+
geom_jitter(width = 0.7, alpha = 1/10)+
geom_line(aes(group = 1),
stat = "summary",
fun.y = median,
color = "#E74C3C",
size = 1,
alpha = 0.8)
}
medians <- function(variable){
print(paste("Median of", variable, "by quality:"))
print(by(redwines[[variable]], redwines$quality, median))
}
boxplot_medians <- function(variable){
medians(variable)
box_plot(variable)
}
boxplot_medians("fixed.acidity")
boxplot_medians("volatile.acidity")
boxplot_medians("citric.acid")
sum(redwines$citric.acid == 0) / nrow(redwines)
# Grouped Percentage
group_by(redwines, quality) %>%
summarise(n_zero = sum(citric.acid == 0)/n())
boxplot_medians("residual.sugar")
#removing the top 10%
boxplot_medians("residual.sugar")+
ylim(NA, quantile(redwines$residual.sugar, 0.90))
boxplot_medians("chlorides")
boxplot_medians("chlorides")+
ylim(NA, quantile(redwines$chlorides, 0.90))
boxplot_medians("free.sulfur.dioxide")
box_plot("free.sulfur.dioxide")+
geom_hline(yintercept = 50, color = "#F1C40F", linetype = 2, size = 1.5)
boxplot_medians("total.sulfur.dioxide")+
ylim(NA, 200)
boxplot_medians("density")
boxplot_medians("pH")
boxplot_medians("density")
boxplot_medians("pH")
boxplot_medians("sulphates")
boxplot_medians("sulphates")+
ylim(NA, quantile(redwines$sulphates, 0.90))
boxplot_medians("alcohol")
ggplot(redwines, aes(x = pH, y = fixed.acidity))+
geom_point(alpha = 1/3)+
scale_y_log10()
ggplot(redwines, aes(x = pH, y = citric.acid))+
geom_point(alpha = 1/3)+
scale_y_log10()
ggplot(redwines, aes(x = pH, y = volatile.acidity))+
geom_point(alpha = 1/3)+
scale_y_log10()
cor.test(~ pH + log10(volatile.acidity), data = redwines)
ggplot(redwines, aes(x = volatile.acidity, y = fixed.acidity))+
geom_point(alpha = 1/2)
ggplot(redwines, aes(x = residual.sugar, y = density))+
geom_point(alpha = 1/3)
ggplot(redwines, aes(x = residual.sugar, y = density))+
geom_point(alpha = 1/3)+
xlim(NA, 4)
ggplot(redwines, aes(x = alcohol, y = density))+
geom_point(alpha = 1/3)
ggplot(redwines, aes(x = alcohol, y = residual.sugar))+
geom_point(alpha = 1/3)+geom_smooth()
ggplot(redwines, aes(x = alcohol, y = residual.sugar))+
geom_point(alpha = 1/3)+
ylim(NA, 4)
cor.test(~ residual.sugar + alcohol, data = redwines)
ggplot(redwines, aes(x = sulphates, y = total.sulfur.dioxide))+
geom_point(alpha = 1/5)
ggplot(redwines, aes(x = sulphates, y = free.sulfur.dioxide))+
geom_point(alpha = 1/5)
cor.test(~ total.sulfur.dioxide + sulphates, redwines)
cor.test(~ free.sulfur.dioxide + sulphates, redwines)
cor(x = redwines[1:11],
y = as.numeric(redwines$quality),
method = "spearman")
cor(x = redwines[1:11],
y = as.numeric(redwines$quality),
method = "spearman")
# http://www.r-bloggers.com/using-r-correlation-heatmap-with-ggplot2/
corr_matrix <- as.data.frame(cor(data.frame(redwines[1:11],
quality_num = as.numeric(redwines$quality)),
method = "spearman")) %>%
add_rownames(var = "Var1") %>% # need row names for the gathering
gather(key = "Var2",
value = "correlation",
-Var1)
ggplot(data = corr_matrix, aes(x = Var1, y = Var2))+
geom_tile(aes(fill = correlation))+
geom_text(aes(label = round(correlation, 3)), size = 2)+
scale_fill_gradient2(low = "#E74C3C", mid = "white", high="#2471A3")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.2, hjust = 1))
# http://www.r-bloggers.com/using-r-correlation-heatmap-with-ggplot2/
corr_matrix <- as.data.frame(cor(data.frame(redwines[1:11],
quality_num = as.numeric(redwines$quality)),
method = "spearman")) %>%
add_rownames(var = "Var1") %>% # need row names for the gathering
gather(key = "Var2",
value = "correlation",
-Var1)
ggplot(data = corr_matrix, aes(x = Var1, y = Var2))+
geom_tile(aes(fill = correlation))+
geom_text(aes(label = round(correlation, 3)), size = 2)+
scale_fill_gradient2(low = "#E74C3C", mid = "white", high="#2471A3")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.2, hjust = 1))
ggplot(data = correlations, aes(x = Var1, y = Var2))+
geom_tile(aes(fill = correlation))+
geom_text(aes(label = round(correlation, 3)), size = 2)+
scale_fill_gradient2(low = "#E74C3C", mid = "white", high="#2471A3")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.2, hjust = 1))
# http://www.r-bloggers.com/using-r-correlation-heatmap-with-ggplot2/
corr_matrix <- as.data.frame(cor(data.frame(redwines[1:11],
quality_num = as.numeric(redwines$quality)),
method = "spearman")) %>%
add_rownames(var = "Var1") %>% # need row names for the gathering
gather(key = "Var2",
value = "correlation",-Var1)
# http://www.r-bloggers.com/using-r-correlation-heatmap-with-ggplot2/
corr_matrix <- as.data.frame(cor(data.frame(redwines[1:11],
quality_num = as.numeric(redwines$quality)),
method = "spearman")) %>%
add_rownames(var = "Var1") %>% # need row names for the gathering
gather(key = "Var2",value = "correlation",-Var1)
# Multivariate Plots Section
install.packages('tidyverse')
devtools::install_github('tidyverse/tidyverse')
